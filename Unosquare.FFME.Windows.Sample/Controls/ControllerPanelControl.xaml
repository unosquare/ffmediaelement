<UserControl x:Class="Unosquare.FFME.Windows.Sample.Controls.ControllerPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Unosquare.FFME.Windows.Sample.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{StaticResource ViewModel}">
    <Grid Name="Controls" Visibility="Visible" Height="250" Background="{x:Null}">
        <Canvas IsHitTestVisible="False" Background="{DynamicResource ShadedBackgroundBrush}" />

        <Grid VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>

            <Slider Name="PositionSlider" Grid.Row="0" Margin="10,0" Cursor="Hand"
                Style="{DynamicResource PositionSliderStyle}"
                Visibility="{Binding Controller.SeekBarVisibility}"
                IsEnabled="{Binding App.MediaElement.IsOpen}"
                SmallChange="{Binding App.MediaElement.FrameStepDuration, Converter={StaticResource TimeSpanToSecondsConverter}}"
                LargeChange="{Binding App.MediaElement.FrameStepDuration, Converter={StaticResource TimeSpanToSecondsConverter}}"
                Maximum="{Binding App.MediaElement.NaturalDuration, Converter={StaticResource TimeSpanToSecondsConverter}}" 
                Value="{Binding App.MediaElement.Position, Converter={StaticResource TimeSpanToSecondsConverter}}" />

            <DockPanel Name="ProgressPanel" Grid.Row="1" LastChildFill="True" Margin="20,0">
                <TextBlock Width="100" Visibility="{Binding Controller.IsMediaOpenVisibility}" VerticalAlignment="Center" DockPanel.Dock="Left" Foreground="{StaticResource CustomSliderHighlightBrush}" Text="{Binding App.MediaElement.Position, Converter={StaticResource TimeSpanFormatter}, Mode=OneWay}" />
                <TextBlock Width="100" Visibility="{Binding Controller.SeekBarVisibility}" VerticalAlignment="Center" TextAlignment="Right" DockPanel.Dock="Right" Foreground="{StaticResource CustomSliderHighlightBrush}" Text="{Binding App.MediaElement.RemainingDuration, Converter={StaticResource TimeSpanFormatter}, Mode=OneWay}" />
                <Grid Width="500">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Visibility="{Binding Controller.BufferingProgressVisibility}" Grid.Column="0" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource CustomSliderHighlightBrush}" Text="{Binding App.MediaElement.BufferingProgress, Converter={StaticResource PercentageFormatter}}" ToolTip="Buffering Progress" />
                    <ProgressBar Visibility="{Binding Controller.BufferingProgressVisibility}" Grid.Column="1" VerticalAlignment="Center"  Value="{Binding App.MediaElement.BufferingProgress, Mode=OneWay}" Style="{DynamicResource NetworkProgressBarStyle}" IsIndeterminate="{Binding App.MediaElement.IsOpening}"></ProgressBar>
                    <ProgressBar Visibility="{Binding Controller.DownloadProgressVisibility}" Grid.Column="2" VerticalAlignment="Center" Value="{Binding App.MediaElement.DownloadProgress, Mode=OneWay}" Style="{DynamicResource NetworkProgressBarStyle}" IsIndeterminate="{Binding App.MediaElement.IsOpening}"></ProgressBar>
                    <TextBlock Visibility="{Binding Controller.DownloadProgressVisibility}" Grid.Column="3" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource CustomSliderHighlightBrush}" Text="{Binding App.MediaElement.DownloadProgress, Converter={StaticResource PercentageFormatter}}" ToolTip="Download Progress" />

                </Grid>
            </DockPanel>

            <Grid Name="ControlsPanel" Grid.Row="2" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <DockPanel Name="LeftControls" HorizontalAlignment="Left" Grid.Column="0">
                    <ToggleButton Visibility="{Binding Controller.IsMediaOpenVisibility}" Name="SoundMenuButton" Style="{DynamicResource ModernToggleButtonStyle}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource AudioMenuIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=SoundMenuButton, Mode=TwoWay}" StaysOpen="False" Name="SoundMenuPopup"
                           PopupAnimation="Fade" Placement="Top" PlacementTarget="{Binding ElementName=SoundMenuButton}"
                           VerticalOffset="2" HorizontalOffset="-18">
                        <Popup.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{StaticResource CustomSliderHighlightBrush}" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </Popup.Resources>
                        <Border Background="#FF1F1F1F" BorderBrush="#FF767676" BorderThickness="1">
                            <Grid Width="364" Height="120">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>

                                <!--Volume Slider -->
                                <TextBlock Grid.Row="0" Grid.Column="0">Volume</TextBlock>
                                <Slider Grid.Row="0" IsEnabled="{Binding Controller.IsAudioControlEnabled}" Grid.Column="1" Style="{DynamicResource CustomSliderStyle}" Minimum="0.0" Maximum="1.0" Value="{Binding App.MediaElement.Volume}" />
                                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding App.MediaElement.Volume, Mode=OneWay, Converter={StaticResource PercentageFormatter}}" />

                                <!--Balance Slider -->
                                <TextBlock Grid.Row="1" Grid.Column="0">Balance</TextBlock>
                                <Slider Grid.Row="1" IsEnabled="{Binding Controller.IsAudioControlEnabled}" Grid.Column="1" Style="{DynamicResource CustomSliderStyle}" Minimum="-1.0" Maximum="1.0" Value="{Binding App.MediaElement.Balance}" />
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding App.MediaElement.Balance, Mode=OneWay, Converter={StaticResource PercentageFormatter}, ConverterParameter=1}" />

                                <!-- Speed Ratio Slider -->
                                <TextBlock Grid.Row="2" Grid.Column="0">Speed</TextBlock>
                                <Slider IsEnabled="{Binding Controller.IsSpeedRatioEnabled}" Grid.Row="2" Grid.Column="1" Style="{DynamicResource CustomSliderStyle}" Minimum="0.0" Maximum="8.0" Value="{Binding App.MediaElement.SpeedRatio}" />
                                <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding App.MediaElement.SpeedRatio, Mode=OneWay, Converter={StaticResource PercentageFormatter}}" />

                            </Grid>
                        </Border>
                    </Popup>
                    <ToggleButton Visibility="{Binding Controller.AudioControlVisibility}" Name="MuteUnmuteButton" Style="{DynamicResource ModernToggleButtonStyle}" IsChecked="{Binding App.MediaElement.IsMuted, Mode=TwoWay}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource UnmuteIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                    <ToggleButton Name="ClosedCapttionsButton"
                                  Style="{DynamicResource ModernToggleButtonStyle}"
                                  Visibility="{Binding Controller.ClosedCaptionsVisibility}"
                                  IsChecked="{Binding App.MediaElement.ClosedCaptionsChannel, Converter={StaticResource ClosedCaptionsChannelConverter}, Mode=TwoWay}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource ClosedCaptions}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>
                </DockPanel>

                <DockPanel Name="RightControls" HorizontalAlignment="Right" Grid.Column="2">

                    <Button Style="{DynamicResource ModernButtonStyle}" Command="{Binding App.Commands.CloseCommand}" Visibility="{Binding Controller.CloseButtonVisibility}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource CloseIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>

                    <Button Name="ToggleFullscreenButton" Style="{DynamicResource ModernButtonStyle}" Command="{Binding App.Commands.ToggleFullscreenCommand}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource ToggleFullscreenIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>

                    <ToggleButton IsChecked="{Binding IsPropertiesPanelOpen}" Name="OpenDebugButton" Style="{DynamicResource ModernToggleButtonStyle}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource OpenDebugIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>

                    <ToggleButton IsChecked="{Binding IsPlaylistPanelOpen}" Name="OpenMenuButton" Style="{DynamicResource ModernToggleButtonStyle}" Visibility="{Binding Controller.OpenButtonVisibility}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource OpenMenuIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                    </ToggleButton>

                </DockPanel>

                <DockPanel Name="CenterControls" HorizontalAlignment="Center" Grid.Column="1">
                    <Button Visibility="{Binding Controller.PlayButtonVisibility}" Style="{DynamicResource ModernButtonStyle}" Command="{Binding App.Commands.PlayCommand}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource PlayIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                    <Button Visibility="{Binding Controller.PauseButtonVisibility}" Style="{DynamicResource ModernButtonStyle}" Command="{Binding App.Commands.PauseCommand}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource PauseIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                    <Button Visibility="{Binding Controller.StopButtonVisibility}" Style="{DynamicResource ModernButtonStyle}" Command="{Binding App.Commands.StopCommand}">
                        <Path Stretch="Uniform" Data="{Binding Source={StaticResource StopIcon}, Path=Data}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                    </Button>
                </DockPanel>

            </Grid>
        </Grid>
    </Grid>
</UserControl>
